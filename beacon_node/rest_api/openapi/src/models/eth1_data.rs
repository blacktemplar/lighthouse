/*
 * Minimal Beacon Node API for Validator
 *
 * A minimal API specification for the beacon node, which enables a validator to connect and perform its obligations on the Ethereum 2.0 phase 0 beacon chain.
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Eth1Data : The [`Eth1Data`](https://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#eth1data) object from the Eth2.0 spec.

#[allow(unused_imports)]
use serde_json::Value;


#[derive(Debug, Serialize, Deserialize)]
pub struct Eth1Data {
    /// Root of the deposit tree.
    #[serde(rename = "deposit_root", skip_serializing_if = "Option::is_none")]
    pub deposit_root: Option<String>,
    /// Total number of deposits.
    #[serde(rename = "deposit_count", skip_serializing_if = "Option::is_none")]
    pub deposit_count: Option<i32>,
    /// Ethereum 1.x block hash.
    #[serde(rename = "block_hash", skip_serializing_if = "Option::is_none")]
    pub block_hash: Option<String>,
}

impl Eth1Data {
    /// The [`Eth1Data`](https://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#eth1data) object from the Eth2.0 spec.
    pub fn new() -> Eth1Data {
        Eth1Data {
            deposit_root: None,
            deposit_count: None,
            block_hash: None,
        }
    }
}


