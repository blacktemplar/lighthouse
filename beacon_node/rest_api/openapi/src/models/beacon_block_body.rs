/*
 * Minimal Beacon Node API for Validator
 *
 * A minimal API specification for the beacon node, which enables a validator to connect and perform its obligations on the Ethereum 2.0 phase 0 beacon chain.
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// BeaconBlockBody : The [`BeaconBlockBody`](https://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#beaconblockbody) object from the Eth2.0 spec.

#[allow(unused_imports)]
use serde_json::Value;


#[derive(Debug, Serialize, Deserialize)]
pub struct BeaconBlockBody {
    /// The RanDAO reveal value provided by the validator.
    #[serde(rename = "randao_reveal", skip_serializing_if = "Option::is_none")]
    pub randao_reveal: Option<String>,
    #[serde(rename = "eth1_data", skip_serializing_if = "Option::is_none")]
    pub eth1_data: Option<::models::Eth1Data>,
    #[serde(rename = "graffiti", skip_serializing_if = "Option::is_none")]
    pub graffiti: Option<String>,
    #[serde(rename = "proposer_slashings", skip_serializing_if = "Option::is_none")]
    pub proposer_slashings: Option<Vec<::models::ProposerSlashings>>,
    #[serde(rename = "attester_slashings", skip_serializing_if = "Option::is_none")]
    pub attester_slashings: Option<Vec<::models::AttesterSlashings>>,
    #[serde(rename = "attestations", skip_serializing_if = "Option::is_none")]
    pub attestations: Option<Vec<::models::Attestation>>,
    #[serde(rename = "deposits", skip_serializing_if = "Option::is_none")]
    pub deposits: Option<Vec<::models::Deposit>>,
    #[serde(rename = "voluntary_exits", skip_serializing_if = "Option::is_none")]
    pub voluntary_exits: Option<Vec<::models::VoluntaryExit>>,
    #[serde(rename = "transfers", skip_serializing_if = "Option::is_none")]
    pub transfers: Option<Vec<::models::Transfer>>,
}

impl BeaconBlockBody {
    /// The [`BeaconBlockBody`](https://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#beaconblockbody) object from the Eth2.0 spec.
    pub fn new() -> BeaconBlockBody {
        BeaconBlockBody {
            randao_reveal: None,
            eth1_data: None,
            graffiti: None,
            proposer_slashings: None,
            attester_slashings: None,
            attestations: None,
            deposits: None,
            voluntary_exits: None,
            transfers: None,
        }
    }
}


