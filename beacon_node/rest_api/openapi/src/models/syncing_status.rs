/*
 * Minimal Beacon Node API for Validator
 *
 * A minimal API specification for the beacon node, which enables a validator to connect and perform its obligations on the Ethereum 2.0 phase 0 beacon chain.
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;


#[derive(Debug, Serialize, Deserialize)]
pub struct SyncingStatus {
    /// The slot at which syncing started (will only be reset after the sync reached its head)
    #[serde(rename = "starting_slot", skip_serializing_if = "Option::is_none")]
    pub starting_slot: Option<i32>,
    /// The most recent slot sync'd by the beacon node.
    #[serde(rename = "current_slot", skip_serializing_if = "Option::is_none")]
    pub current_slot: Option<i32>,
    /// Globally, the estimated most recent slot number, or current target slot number.
    #[serde(rename = "highest_slot", skip_serializing_if = "Option::is_none")]
    pub highest_slot: Option<i32>,
}

impl SyncingStatus {
    pub fn new() -> SyncingStatus {
        SyncingStatus {
            starting_slot: None,
            current_slot: None,
            highest_slot: None,
        }
    }
}


