/*
 * Minimal Beacon Node API for Validator
 *
 * A minimal API specification for the beacon node, which enables a validator to connect and perform its obligations on the Ethereum 2.0 phase 0 beacon chain.
 *
 * The version of the OpenAPI document: 0.2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Transfer : The [`Transfer`](https://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#transfer) object from the Eth2.0 spec.

#[allow(unused_imports)]
use serde_json::Value;


#[derive(Debug, Serialize, Deserialize)]
pub struct Transfer {
    /// Sender index.
    #[serde(rename = "sender", skip_serializing_if = "Option::is_none")]
    pub sender: Option<i32>,
    /// Recipient index.
    #[serde(rename = "recipient", skip_serializing_if = "Option::is_none")]
    pub recipient: Option<i32>,
    /// Amount in Gwei.
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<i32>,
    /// Fee in Gwei for block producer.
    #[serde(rename = "fee", skip_serializing_if = "Option::is_none")]
    pub fee: Option<i32>,
    /// Inclusion slot.
    #[serde(rename = "slot", skip_serializing_if = "Option::is_none")]
    pub slot: Option<i32>,
    /// Sender withdrawal public key.
    #[serde(rename = "pubkey", skip_serializing_if = "Option::is_none")]
    pub pubkey: Option<String>,
    /// Sender signature.
    #[serde(rename = "signature", skip_serializing_if = "Option::is_none")]
    pub signature: Option<String>,
}

impl Transfer {
    /// The [`Transfer`](https://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#transfer) object from the Eth2.0 spec.
    pub fn new() -> Transfer {
        Transfer {
            sender: None,
            recipient: None,
            amount: None,
            fee: None,
            slot: None,
            pubkey: None,
            signature: None,
        }
    }
}


